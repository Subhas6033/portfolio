import { Resend } from "resend";
import { asyncHandeler, ApiError, ApiResponse } from "../Utils/index.js";
import { Contact } from "../Models/Contact.models.js";

const resend = new Resend(process.env.RESEND_API_KEY);

const handleContactForm = asyncHandeler(async (req, res) => {
  const { userName, email, mobileNumber, subject, message } = req.body;

  console.log("Coming From the Body:", userName, email, mobileNumber, subject, message);

  // Validate fields
  if ([userName, email, mobileNumber, subject, message].some((f) => !f || f.trim() === "")) {
    throw new ApiError(400, "All fields are required!");
  }

  // Prepare emails
  const adminMail = {
  from: process.env.EMAIL_FROM,
  to: process.env.EMAIL_USER || "youremail@example.com",
  subject: `ðŸ“© New Contact Form Submission: ${subject}`,
  text: `
New contact form submission:

Name: ${userName}
Email: ${email}
Mobile: ${mobileNumber}
Message: ${message}
  `,
  html: `
  <div style="font-family: 'Segoe UI', Arial, sans-serif; background-color: #f4f7fb; padding: 30px;">
    <div style="max-width: 600px; margin: auto; background: white; border-radius: 12px; box-shadow: 0 4px 10px rgba(0,0,0,0.08); overflow: hidden;">
      <div style="background-color: #2563eb; color: white; padding: 20px 30px;">
        <h2 style="margin: 0;">New Contact Form Submission</h2>
      </div>
      <div style="padding: 25px 30px; color: #333;">
        <p><strong>Name:</strong> ${userName}</p>
        <p><strong>Email:</strong> ${email}</p>
        <p><strong>Mobile:</strong> ${mobileNumber}</p>
        <p><strong>Subject:</strong> ${subject}</p>
        <hr style="margin: 20px 0; border: none; border-top: 1px solid #eee;" />
        <p><strong>Message:</strong></p>
        <blockquote style="background: #f9fafb; padding: 15px 20px; border-left: 4px solid #2563eb; margin: 0; border-radius: 6px; color: #444;">${message}</blockquote>
      </div>
      <div style="background: #f9fafb; padding: 15px 30px; font-size: 13px; color: #666; text-align: center;">
        This email was automatically generated by your website contact form.
      </div>
    </div>
  </div>
  `,
};


const userMail = {
  from: "Subhas Mondal <onboarding@resend.dev>",
  to: process.env.EMAIL_USER,
  subject: `ðŸ’¬ We received your message: ${subject}`,
  text: `Hello ${userName},

Thank you for reaching out to me.
I have received your message and will get back to you soon.

Hereâ€™s a copy of your message:
"${message}"

â€” Regards,
Subhas Mondal`,
  html: `
  <div style="font-family: 'Segoe UI', Arial, sans-serif; background-color: #f4f7fb; padding: 30px;">
    <div style="max-width: 600px; margin: auto; background: white; border-radius: 12px; box-shadow: 0 4px 10px rgba(0,0,0,0.08); overflow: hidden;">
      <div style="background-color: #2563eb; color: white; padding: 20px 30px;">
        <h2 style="margin: 0;">Thank You for Contacting Me</h2>
      </div>
      <div style="padding: 25px 30px; color: #333;">
        <p>Hi <strong>${userName}</strong>,</p>
        <p>Thank you for reaching out! Iâ€™ve received your message and will respond as soon as possible.</p>
        <p style="margin-top: 15px;"><strong>Your message:</strong></p>
        <blockquote style="background: #f9fafb; padding: 15px 20px; border-left: 4px solid #2563eb; margin: 0; border-radius: 6px; color: #444;">${message}</blockquote>
        <p style="margin-top: 25px;">Best regards,<br/><strong>Subhas Mondal</strong></p>
      </div>
      <div style="background: #f9fafb; padding: 15px 30px; font-size: 13px; color: #666; text-align: center;">
        This is an automated confirmation email â€” no reply needed.
      </div>
    </div>
  </div>
  `,
};


  try {
    // Send both emails sequentially
    await Promise.all([
  resend.emails.send(adminMail),
  resend.emails.send(userMail)
]);


    // Save to DB after both succeed
    const dbDetails = await Contact.create({
      userName,
      email,
      mobileNumber,
      subject,
      message,
    });

    res
      .status(200)
      .json(new ApiResponse(200, "Contact saved and emails sent successfully", dbDetails));
  } catch (error) {
    console.error("Email or DB Error:", error);

    if (error.message?.includes("quota") || error.message?.includes("limit")) {
      throw new ApiError(429, "Email quota exceeded. Please try again later.");
    }

    throw new ApiError(500, error.message || "Failed to send email or save contact");
  }
});

export { handleContactForm };
